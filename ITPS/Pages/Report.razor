@page "/Report"
@inject Radzen.DialogService dialogService
@using Radzen
@using ITPS.Data.Code
<div class="container-fluid" style="width:1500px !important; margin-left:-225px">
    @if (!string.IsNullOrEmpty(PageMessage))
    {
        <div class="alert alert-success" role="alert">
            @PageMessage
        </div>
    }
    @if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @ErrorMessage
        </div>
    }
    <h1>Report</h1>
    <div class="row">
        <div class="col-sm-12 col-lg-6">
            <RadzenCard class="w-100 mb-4">
                <RadzenCheckBox @bind-Value="@showDataLabels" Name="dataLabels"></RadzenCheckBox>
                <RadzenLabel Text="Show Data Labels" For="dataLabels" Style="margin-left: 8px; vertical-align: middle;" />
            </RadzenCard>
            <RadzenChart>
                <RadzenDonutSeries Data="@PageModel?.AssignedToData" CategoryProperty="DisplayValue" ValueProperty="DataCount">
                    <ChildContent>
                        <RadzenSeriesDataLabels Visible="@showDataLabels" />
                    </ChildContent>
                    <TitleTemplate>
                        <div class="rz-donut-content">
                            <div>Assigned To</div>
                            <div>Ticket Count</div>
                        </div>
                    </TitleTemplate>
                </RadzenDonutSeries>
            </RadzenChart>
        </div>
        <div class="col-sm-12 col-lg-6">
            <RadzenCard class="w-100 mb-4">
                <RadzenCheckBox @bind-Value="@showDataLabels" Name="dataLabels"></RadzenCheckBox>
                <RadzenLabel Text="Show Data Labels" For="dataLabels" Style="margin-left: 8px; vertical-align: middle;" />
            </RadzenCard>
            <RadzenChart>
                <RadzenDonutSeries Data="@PageModel?.StatusData" CategoryProperty="DisplayValue" ValueProperty="DataCount">
                    <ChildContent>
                        <RadzenSeriesDataLabels Visible="@showDataLabels" />
                    </ChildContent>
                    <TitleTemplate>
                        <div class="rz-donut-content">
                            <div>Status</div>
                            <div>Ticket Count</div>
                        </div>
                    </TitleTemplate>
                </RadzenDonutSeries>
            </RadzenChart>
        </div>
    </div>
    @*<RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="20"
                    AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true" RowRender="@OnRowRender"
                    Data="@PageModel" TItem="NotificationEntity" LogicalFilterOperator="LogicalFilterOperator.Or">
        <Columns>
            <RadzenDataGridColumn TItem="NotificationEntity" Title="Notification" TextAlign="TextAlign.Center">
                <Template Context="TheData">
                    @((MarkupString) TheData.NotificationValue)
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="NotificationEntity" Property="NotificationType" Title="Type" />
            <RadzenDataGridColumn TItem="NotificationEntity" Property="NotificationTarget" Title="Audience" />
            <RadzenDataGridColumn TItem="TicketEntity" Property="CreatedDateTime" Title="Notification Date">
                <Template Context="TheData">
                    @TheData.CreatedDateTime.ToString("yyyy-MM-dd")
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="NotificationEntity" Property="CreatedDateTime" Title="Notification Date" />
            <RadzenDataGridColumn TItem="NotificationEntity" Property="CreatedBy" Title="CreatedBy" />
            <RadzenDataGridColumn TItem="NotificationEntity" Title="ID" TextAlign="TextAlign.Center">
                <Template Context="TheData">
                    @if (TheData.ReadDateTime == DateTime.MinValue)
                    {
                        <a href="JavaScript: void(0);" onclick="@(() => UpdateNotificationToRead(TheData))">UNREAD</a>
                    }
                    else
                    {
                        <a href="JavaScript: void(0);" onclick="@(() => UpdateNotificationToRead(TheData))">READ</a>
                    }
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>*@

</div>
@code {
    [CascadingParameter]
    public CascadingAppState AppState { get; set; }
    private OverviewReportEntity PageModel = new();
    private string PageMessage = string.Empty;
    private string ErrorMessage = string.Empty;
    protected override void OnInitialized()
    {
        ReloadModel();
    }
    private void ReloadModel()
    {
        try
        {
            PageModel = ITPS.Data.Code.TicketFactory.GetOverviewReportData();
            if (PageModel.ErrorObject != null) { ErrorMessage = PageModel.ErrorObject.Message; }
            StateHasChanged();
        }
        catch (Exception ex)
        {
            ErrorMessage = ex.Message;
        }

    }
    protected void OnRowRender(RowRenderEventArgs<NotificationEntity> args)
    {
        if (args.Data.ReadDateTime == DateTime.MinValue)
        { args.Attributes.Add("style", $"background-color: #CFE2FF"); }
    }

    bool showDataLabels = false;

}
