@inherits LayoutComponentBase
@inject NavigationManager NavManager
@inject Radzen.DialogService dialogService
@inject Radzen.NotificationService notificationService
@inject IJSRuntime JsRuntime
@using ITPS.Data.Code

<PageTitle>ITPS</PageTitle>

<div id="wrapper">
    <Radzen.Blazor.RadzenDialog />
    <RadzenNotification />
    <!-- Sidebar -->
    <ul class="navbar-nav bg-gradient-primary sidebar sidebar-dark accordion" id="accordionSidebar">

        <!-- Sidebar - Brand -->
        <a class="sidebar-brand d-flex align-items-center justify-content-center" href="/index">
            <div class="sidebar-brand-icon rotate-n-15">
                <i class="fas fa-laugh-wink"></i>
            </div>
            <div class="sidebar-brand-text mx-3">IT Production Support</div>
        </a>
        @if (AppState.CurrentUser != null && AppState.CurrentUser.UserProfileKey > 0)
        {
            <!-- Divider -->
            <hr class="sidebar-divider my-0">

            <!-- Nav Item - Dashboard -->
            <li class="nav-item active">
                <a class="nav-link" href="/">
                    <i class="fas fa-fw fa-tachometer-alt"></i>
                    <span>Dashboard</span>
                </a>
            </li>

            <!-- Divider -->
            <hr class="sidebar-divider">

            <!-- Heading -->
            <div class="sidebar-heading">
                Interface
            </div>

            <!-- Nav Item - Pages Collapse Menu -->
            <li class="nav-item">
                <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapseTwo"
               aria-expanded="true" aria-controls="collapseTwo">
                    <i class="fas fa-fw fa-cog"></i>
                    <span>Tickets</span>
                </a>
                <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo" data-parent="#accordionSidebar">
                    <div class="bg-white py-2 collapse-inner rounded">
                        <h6 class="collapse-header">Tickets:</h6>
                        <a class="collapse-item" href="/ticket">Add New</a>
                    </div>
                </div>
            </li>
            <li class="nav-item">
                <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapseThree"
               aria-expanded="true" aria-controls="collapseThree">
                    <i class="fas fa-fw fa-folder"></i>
                    <span>Notifications</span>
                </a>
                <div id="collapseThree" class="collapse" aria-labelledby="headingThree" data-parent="#accordionSidebar">
                    <div class="bg-white py-2 collapse-inner rounded">
                        <h6 class="collapse-header">Notifications:</h6>
                        <a class="collapse-item" href="/SendNotification">Send Notification</a>
                    </div>
                </div>
            </li>

            <!-- Nav Item - Utilities Collapse Menu -->
            <li class="nav-item">
                <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapseUtilities"
               aria-expanded="true" aria-controls="collapseUtilities">
                    <i class="fas fa-fw fa-wrench"></i>
                    <span>Reports</span>
                </a>
                <div id="collapseUtilities" class="collapse" aria-labelledby="headingUtilities"
                 data-parent="#accordionSidebar">
                    <div class="bg-white py-2 collapse-inner rounded">
                        <h6 class="collapse-header">Custom Reports:</h6>
                        <a class="collapse-item" href="/Report">Overview Report</a>
                        <a class="collapse-item" href="/TicketReport">Ticket Report</a>
                        <a class="collapse-item" href="/TicketCalendar">Ticket Calendar</a>
                        <a class="collapse-item" href="/TicketPriority">Ticket Priority</a>
                    </div>
                </div>
            </li>


            <!-- Divider -->
            <hr class="sidebar-divider d-none d-md-block">

            <!-- Sidebar Toggler (Sidebar) -->
            <div class="text-center d-none d-md-inline">
                <button class="rounded-circle border-0" id="sidebarToggle"></button>
            </div>
        }
        <!-- End of Sidebar -->
    </ul>

    <main>


        <article class="content px-4">
            <!-- Content Wrapper -->
            <div id="content-wrapper" class="d-flex flex-column">

                <!-- Main Content -->
                <div id="content" style="width:1500px !important;">

                    <!-- Topbar -->
                    <nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow">

                        <!-- Sidebar Toggle (Topbar) -->
                        <button id="sidebarToggleTop" class="btn btn-link d-md-none rounded-circle mr-3">
                            <i class="fa fa-bars"></i>
                        </button>
                        @if (AppState.CurrentUser != null && AppState.CurrentUser.UserProfileKey > 0)
                        {
                            <form class="d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search">
                                <div class="input-group">
                                    <RadzenTextBox class="form-control bg-light border-0 small" Placeholder="Search for..."
                                               aria-label="Search" aria-describedby="basic-addon2" @bind-Value=JumpToTicketKey />
                                    <div class="input-group-append">
                                        <button class="btn btn-primary" type="button" @onclick="SearchForTicket">
                                            <i class="fas fa-search fa-sm"></i>
                                        </button>
                                    </div>
                                    <span style="color: red; font-size:10pt">@((MarkupString)searchMessage)</span>
                                </div>
                            </form>
                            @if (!string.IsNullOrEmpty(PageMessage))
                            {
                                <div class="alert alert-warning" role="alert">
                                    @((MarkupString)PageMessage)
                                </div>
                            }

                            <!-- Topbar Navbar -->
                            <ul class="navbar-nav ml-auto">

                                <!-- Nav Item - Search Dropdown (Visible Only XS) -->
                                <li class="nav-item dropdown no-arrow d-sm-none">
                                    <a class="nav-link dropdown-toggle" href="#" id="searchDropdown" role="button"
                                   data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <i class="fas fa-search fa-fw"></i>
                                    </a>
                                    <!-- Dropdown - Messages -->
                                    <div class="dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in"
                                     aria-labelledby="searchDropdown">
                                        <form class="form-inline mr-auto w-100 navbar-search">
                                            <div class="input-group">
                                                <input type="text" class="form-control bg-light border-0 small"
                                                   placeholder="Search for..." aria-label="Search"
                                                   aria-describedby="basic-addon2">
                                                <div class="input-group-append">
                                                    <button class="btn btn-primary" type="button">
                                                        <i class="fas fa-search fa-sm"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </li>
                                @if (AppState.CurrentUser != null && AppState.CurrentUser.UserProfileKey > 0)
                                {
                                    <li class="nav-item dropdown no-arrow mx-1">
                                        <a class="nav-link dropdown-toggle" href="#" id="alertsDropdown" role="button"
                                   data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <i class="fas fa-bell fa-fw"></i>
                                            <!-- Counter - Alerts -->
                                            <span class="badge badge-danger badge-counter">@AppState.CurrentUser?.NotificationList.Where(x => x.NotificationTypeCode == "ALERT" && x.ReadDateTime == DateTime.MinValue).Count()</span>
                                        </a>
                                        <!-- Dropdown - Alerts -->
                                        <div class="dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in"
                                     aria-labelledby="alertsDropdown">
                                            <h6 class="dropdown-header">
                                                Alerts Center
                                            </h6>
                                            @foreach (NotificationEntity newItem in AppState.CurrentUser?.NotificationList.Where(x => x.NotificationTypeCode == "ALERT"))
                                            {
                                                <a class="dropdown-item d-flex align-items-center" href="JavaScript: void(0);" onclick="@(() => UpdateNotificationToRead(newItem))">
                                                    <div class="mr-3">
                                                        <div class="icon-circle bg-primary">
                                                            @if(newItem.UserProfileKey==0)
                                                            {
                                                                <i class="fas fa-atlas text-white"></i>
                                                            }
                                                            else
                                                            {
                                                                <i class="fas fa-file-alt text-white"></i>
                                                            }
                                                            
                                                        </div>
                                                    </div>
                                                    <div>
                                                        <div class="small text-gray-500">@newItem.CreatedDateTime.ToString("yyyy-MM-dd hh:mm:ss")</div>
                                                        @if(newItem.ReadDateTime==DateTime.MinValue)
                                                        {
                                                            <span class="font-weight-bold">@((MarkupString)newItem.NotificationValue)</span>
                                                        }
                                                        else
                                                        {
                                                            <span>@((MarkupString)newItem.NotificationValue)</span>
                                                        }
                                                        <div class="small text-gray-500">@newItem.CreatedBy</div>
                                                    </div>
                                                </a>
                                            }
                                            <a class="dropdown-item text-center small text-gray-500" href="/Notifications">Show All Alerts</a>
                                        </div>
                                    </li>
                                }
                                <!-- Nav Item - Alerts -->
                                @if (AppState.CurrentUser != null && AppState.CurrentUser.UserProfileKey > 0)
                                {
                                    <!-- Nav Item - Messages -->
                                    <li class="nav-item dropdown no-arrow mx-1">
                                        <a class="nav-link dropdown-toggle" href="#" id="messagesDropdown" role="button"
                                   data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <i class="fas fa-envelope fa-fw"></i>
                                            <!-- Counter - Messages -->
                                            <span class="badge badge-danger badge-counter">@AppState.CurrentUser?.NotificationList.Where(x => x.NotificationTypeCode=="MESSG" && x.ReadDateTime==DateTime.MinValue).Count() </span>
                                        </a>
                                        <!-- Dropdown - Messages -->
                                        <div class="dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in"
                                     aria-labelledby="messagesDropdown">
                                            <h6 class="dropdown-header">
                                                Message Center
                                            </h6>
                                            @foreach (NotificationEntity newItem in AppState.CurrentUser?.NotificationList.Where(x => x.NotificationTypeCode == "MESSG"))
                                            {
                                                <a class="dropdown-item d-flex align-items-center" href="JavaScript: void(0);" onclick="@(() => UpdateNotificationToRead(newItem))">
                                                    <div class="dropdown-list-image mr-3">
                                                        @if(newItem.UserProfileKey==0)
                                                        {
                                                            <img class="rounded-circle" src="img/pngegg.png"
                                                 alt="..."> }
                                                        else
                                                        {
                                                            <img class="rounded-circle" src="img/undraw_profile_1.svg"
                                                  alt="...">
                                                        }
                                                        
                                                        <div class="status-indicator bg-success"></div>
                                                    </div>
                                                    <div class="font-weight-bold">
                                                        <div class="small text-gray-500">@newItem.CreatedDateTime.ToString("yyyy-MM-dd hh:mm:ss")</div>
                                                        @if (newItem.ReadDateTime == DateTime.MinValue)
                                                        {
                                                            <span class="font-weight-bold text-truncate">@((MarkupString)newItem.NotificationValue)</span>
                                                        }
                                                        else
                                                        {
                                                            <span class="text-truncate" style="font-weight: normal !important">@((MarkupString)newItem.NotificationValue)</span>
                                                        }
                                                        <div class="small text-gray-500">@newItem.CreatedBy</div>
                                                    </div>
                                                </a>
                                            }
                                            <a class="dropdown-item text-center small text-gray-500" href="/Notifications">Read More Messages</a>
                                        </div>
                                    </li>
                                }
                                <div class="topbar-divider d-none d-sm-block"></div>

                                <!-- Nav Item - User Information -->
                                <li class="nav-item dropdown no-arrow">
                                    <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button"
                                   data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <span class="mr-2 d-none d-lg-inline text-gray-600 small">@AppState.CurrentUser.FirstName @AppState.CurrentUser.LastName</span>
                                        <img class="img-profile rounded-circle"
                                         src="img/undraw_profile.svg">
                                    </a>
                                    <!-- Dropdown - User Information -->
                                    <div class="dropdown-menu dropdown-menu-right shadow animated--grow-in"
                                     aria-labelledby="userDropdown">
                                        <a class="dropdown-item" href="#" onclick="@GetQuote">
                                            <i class="fas fa-user fa-sm fa-fw mr-2 text-gray-400"></i>
                                            Get Random Quote
                                        </a>
                                        <span class="dropdown-item" href="#">
                                            <i class="fas fa-cogs fa-sm fa-fw mr-2 text-gray-400"></i>
                                            Last Refreshed: @AppState.CurrentUser.LastRefreshed
                                        </span>
                                        <a class="dropdown-item" href="/Notifications">
                                            <i class="fas fa-list fa-sm fa-fw mr-2 text-gray-400"></i>
                                            Messages &amp; Alerts
                                        </a>
                                        <div class="dropdown-divider"></div>
                                        <a class="dropdown-item" href="JavaScript: void(0);" onclick="@LogOut">
                                            <i class="fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400"></i>
                                            Logout
                                        </a>
                                    </div>
                                </li>

                            </ul>
                        }
                        <!-- Topbar Search -->


                    </nav>
                    <!-- End of Topbar -->
                    <!-- Begin Page Content -->
                    <div class="container" style="width:100% !important">
                        @if (AppState.CurrentUser != null && AppState.CurrentUser.UserProfileKey > 0)
                        {
                            <ErrorBoundary @ref="TheErrorBoundry">
                                <ChildContent>
                                    @Body
                                </ChildContent>
                                <ErrorContent Context="ex">
                                    @if(ShowCloseableFromOverlayDialog(ex))
                                    {

                                    }
                                </ErrorContent>
                            </ErrorBoundary>
                        }
                    </div>
                    <!-- /.container-fluid -->

                </div>
                <!-- End of Main Content -->
                <!-- Footer -->
                <footer class="sticky-footer bg-white">
                    <div class="container my-auto">
                        <div class="copyright text-center my-auto">
                            <span>Copyright &copy; ITPS - MCON 353</span>
                        </div>
                    </div>
                </footer>
                <!-- End of Footer -->

            </div>
            <!-- End of Content Wrapper -->
            <!-- Scroll to Top Button-->
            <a class="scroll-to-top rounded" href="#page-top">
                <i class="fas fa-angle-up"></i>
            </a>
        </article>
    </main>
</div>
@code
{
    [CascadingParameter]
    public CascadingAppState AppState { get; set; }
    private string JumpToTicketKey = string.Empty;
    private string searchMessage;
    private string PageMessage = string.Empty;
    private System.Timers.Timer theTimer = new(300000);
    private const string UserCookieName = "CurrentUserInformation";
    private ErrorBoundary? TheErrorBoundry;
    private bool HideErrorPopup = false;
    protected override void OnInitialized()
    {
        if (AppState.CurrentUser == null && !NavManager.Uri.ToUpper().Contains("/LOGIN"))
        {
            //NavManager.NavigateTo("/Login");
        }
        dialogService.OnClose += ReloadPage;
        theTimer.Elapsed += (sender, eventsArgs) => OnTimerCallBack();
        theTimer.Start();
    }
    protected override void OnParametersSet()
    {
        TheErrorBoundry?.Recover();
    }
    private bool ShowCloseableFromOverlayDialog(Exception ex)
    {
        if(!HideErrorPopup)
        {
            dialogService.Alert("A general error has occurred: " + ex.Message, "Unexpected Error", new AlertOptions() { OkButtonText = "OK", CloseDialogOnEsc = true, ShowClose = true, Draggable = true });
            HideErrorPopup=true;
        }
        return true;
    }
    private void OnTimerCallBack()
    {
        RefreshUserData();
    }
    private async Task RefreshUserData()
    {
        string userName = AppState?.CurrentUser?.UserName;
        string password = AppState?.CurrentUser?.Password;
        await InvokeAsync(() =>
        {
            AppState.SetProperty(this, "CurrentUser", ITPS.Data.Code.UserFactory.GetUserInformation(userName, password));
            StateHasChanged();
        });

    }
    public void ReloadPage(dynamic theResult)
    {
        StateHasChanged();
    }
    private void SearchForTicket()
    {
        searchMessage = string.Empty;
        if (ITPS.Data.Code.LocalFunctions.IsNumeric(JumpToTicketKey))
        { NavManager.NavigateTo("/ticket/" + JumpToTicketKey); }
        else
        {
            List<int> TicketArray = new List<int>();
            string description = JumpToTicketKey;
            TicketArray = ITPS.Data.Code.TicketFactory.GetTicketByDescription(description);
            if (TicketArray.Count() > 1)
            {
                searchMessage = "<b>There were too many tickets found. Please refine your search.</b>";
            }
            else if (TicketArray.Count() == 1)
            {
                NavManager.NavigateTo("/ticket/" + TicketArray[0]);
            }
            else
            {
                searchMessage = "Sorry no items matched your search.";
            }
        }
    }
    private void GetQuote()
    {
        Random theRandom = new Random();
        int randomNumber = theRandom.Next(1, 3);
        if (randomNumber == 1)
        { PageMessage = QuoteFactory.GetRandomQuote(); }
        else
        { PageMessage = QuoteFactory.GetRandomJoke(); }
    }
    private void UpdateNotificationToRead(NotificationEntity theNotification)
    {
        try
        {
            if (theNotification.ReadDateTime == DateTime.MinValue)
            {
                NotificationFactory.UpdateNotificationToRead(theNotification, AppState.CurrentUser.UserProfileKey);
                RefreshUserData();
            }
        }
        catch (Exception ex)
        {

        }
    }
    private async void LogOut()
    {
        await JsRuntime.InvokeAsync<string>("Cookies.deleteCookie", UserCookieName);
    }
}